2025-06-25 16:58:50 [main] INFO  c.m.users.UsersApplicationTest - Starting UsersApplicationTest using Java 17.0.15 with PID 385449 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 16:58:50 [main] INFO  c.m.users.UsersApplicationTest - The following 6 profiles are active: "common", "database", "security", "email", "logging", "rate-limit"
2025-06-25 16:58:55 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-06-25 16:58:55 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:55 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$1092/0x00007f8c5c5d8cb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:56 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:58:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 16:59:00 [main] INFO  c.m.u.core.logging.LoggingService - CacheConfiguration: Cache manager configurado con 8 caches
2025-06-25 16:59:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-25 16:59:04 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 470f454b-7edd-4c99-90be-be1c666d9153

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-06-25 16:59:06 [main] INFO  c.m.u.core.logging.LoggingService - Configurando seguridad de la aplicación
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-25 16:59:09 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-25 16:59:09 [main] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 145 more

2025-06-25 16:59:09 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)

2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Initial registry fetch from primary servers failed
2025-06-25 16:59:09 [main] WARN  c.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Initial registry fetch from backup servers failed
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-25 16:59:09 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1750888749638 with initial instances count: 0
2025-06-25 16:59:09 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1750888749661, current=UP, previous=STARTING]
2025-06-25 16:59:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082: registering service...
2025-06-25 16:59:09 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-06-25 16:59:09 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:09 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:09 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:09 [main] INFO  c.m.users.UsersApplicationTest - Started UsersApplicationTest in 20.376 seconds (process running for 23.71)
2025-06-25 16:59:14 [main] INFO  c.m.u.r.w.c.RegisterControllerTest - Starting RegisterControllerTest using Java 17.0.15 with PID 385449 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 16:59:14 [main] INFO  c.m.u.r.w.c.RegisterControllerTest - The following 6 profiles are active: "common", "database", "security", "email", "logging", "rate-limit"
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$1092/0x00007f8c5c5d8cb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-06-25 16:59:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 16:59:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-25 16:59:20 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 2076b84b-ecdb-46b8-8fd0-e12470cb3d03

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-06-25 16:59:24 [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-06-25 16:59:24 [main] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 145 more

2025-06-25 16:59:24 [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8081/eureka/apps/": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:320)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:364)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:978)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)

2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Initial registry fetch from primary servers failed
2025-06-25 16:59:24 [main] WARN  c.netflix.discovery.DiscoveryClient - Using default backup registry implementation which does not do anything.
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Initial registry fetch from backup servers failed
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-06-25 16:59:24 [main] INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1750888764728 with initial instances count: 0
2025-06-25 16:59:24 [main] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1750888764771, current=UP, previous=STARTING]
2025-06-25 16:59:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082: registering service...
2025-06-25 16:59:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-06-25 16:59:24 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:24 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:24 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:24 [main] INFO  c.m.u.r.w.c.RegisterControllerTest - Started RegisterControllerTest in 10.88 seconds (process running for 38.877)
2025-06-25 16:59:27 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1750888767412, current=DOWN, previous=UP]
2025-06-25 16:59:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082: registering service...
2025-06-25 16:59:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-06-25 16:59:27 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:27 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:27 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:28 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-25 16:59:31 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-25 16:59:31 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 39 more

2025-06-25 16:59:31 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:31 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:31 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-25 16:59:31 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1750888771535, current=DOWN, previous=UP]
2025-06-25 16:59:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082: registering service...
2025-06-25 16:59:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-06-25 16:59:31 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8081/eureka/apps/USERS-SERVICE": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:31 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:31 [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:32 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-06-25 16:59:35 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-06-25 16:59:35 [SpringApplicationShutdownHook] INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8081/eureka/}, exception=I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:184)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:447)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 39 more

2025-06-25 16:59:35 [SpringApplicationShutdownHook] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8081/eureka/apps/USERS-SERVICE/192.168.1.71:users-service:8082": Connect to http://localhost:8081 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Conexión rehusada
2025-06-25 16:59:35 [SpringApplicationShutdownHook] ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_USERS-SERVICE/192.168.1.71:users-service:8082 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1183)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1144)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1090)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-25 16:59:35 [SpringApplicationShutdownHook] INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-06-25 23:06:28 [main] INFO  c.m.u.r.p.repository.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 94162 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:06:28 [main] DEBUG c.m.u.r.p.repository.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:06:28 [main] INFO  c.m.u.r.p.repository.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:06:31 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-06-25 23:06:31 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 98 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 112 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 113 common frames omitted
2025-06-25 23:06:31 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.microserviceone.users.registrationApi.persistance.repository.ORMregisterTest@5568c66f]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@12a470dd testClass = com.microserviceone.users.registrationApi.persistance.repository.ORMregisterTest, locations = [], classes = [com.microserviceone.users.UsersApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [[ImportsContextCustomizer@6968bcec key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25be7b63, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52f27fbd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6cb107fd, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@34e75cc5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@624ea235, org.springframework.boot.test.context.SpringBootTestAnnotation@deb4a57b], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 72 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 98 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 112 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 113 common frames omitted
2025-06-25 23:07:37 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 94521 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:07:37 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:07:37 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:07:40 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
2025-06-25 23:07:40 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 98 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 112 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 113 common frames omitted
2025-06-25 23:07:40 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.microserviceone.users.registrationApi.infraestructure.persistance.repository.ORMregisterTest@4bdf]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@3f6bf8aa testClass = com.microserviceone.users.registrationApi.infraestructure.persistance.repository.ORMregisterTest, locations = [], classes = [com.microserviceone.users.UsersApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [[ImportsContextCustomizer@13c8ac77 key = [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25be7b63, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52f27fbd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6cb107fd, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@34e75cc5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@624ea235, org.springframework.boot.test.context.SpringBootTestAnnotation@101da815], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 72 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:639)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 98 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Cannot load driver class: org.h2.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 112 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:175)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 113 common frames omitted
2025-06-25 23:09:28 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 95168 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:09:28 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:09:28 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:09:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:09:38 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 11.472 seconds (process running for 13.91)
2025-06-25 23:09:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:09:39 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 23502, SQLState: 23502
2025-06-25 23:09:39 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - La columna "EMAIL" no permite valores nulos (NULL)
NULL not allowed for column "EMAIL"; SQL statement:
insert into users (email,last_name,name,password,phone,rol,verified_code,verified_term,id) values (?,?,?,?,?,?,?,?,default) [23502-224]
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:09:39 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:10:50 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 95622 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:10:50 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:10:50 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:10:55 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:10:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:11:03 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 14.849 seconds (process running for 17.543)
2025-06-25 23:11:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:11:06 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:11:06 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:13:16 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 96424 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:13:16 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:13:16 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:13:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:13:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:13:29 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 15.562 seconds (process running for 19.758)
2025-06-25 23:13:31 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:13:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:15:35 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 97100 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:15:35 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:15:35 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:15:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:15:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:15:47 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.848 seconds (process running for 17.12)
2025-06-25 23:15:49 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:15:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:21:46 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 98914 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:21:46 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:21:47 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:21:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:21:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:21:58 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.742 seconds (process running for 17.539)
2025-06-25 23:22:01 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:22:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:23:08 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 99327 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:23:08 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:23:08 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:23:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:23:17 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:23:20 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 14.334 seconds (process running for 17.499)
2025-06-25 23:23:22 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:23:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:23:51 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 99584 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:23:51 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:23:51 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:23:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:24:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:24:03 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.789 seconds (process running for 16.949)
2025-06-25 23:24:05 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:24:05 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:24:55 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 99968 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:24:55 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:24:55 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:25:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:25:03 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:25:06 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 12.431 seconds (process running for 15.527)
2025-06-25 23:25:07 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:25:07 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:25:07 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:25:42 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 100237 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:25:42 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:25:43 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:25:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:25:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:25:53 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 12.718 seconds (process running for 15.747)
2025-06-25 23:25:55 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:25:55 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:26:05 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 100394 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:26:05 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:26:05 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:26:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:26:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:26:16 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.263 seconds (process running for 16.002)
2025-06-25 23:26:18 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:26:18 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:30:27 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 101838 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:30:27 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:30:27 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:30:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:30:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:30:39 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.547 seconds (process running for 16.404)
2025-06-25 23:30:40 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:30:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:32:12 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 102367 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:32:12 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:32:12 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:32:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:32:21 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:32:24 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.154 seconds (process running for 16.094)
2025-06-25 23:32:25 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:32:25 [main] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        last_name=?,
        name=?,
        password=?,
        phone=?,
        rol=?,
        verified_code=?,
        verified_term=? 
    where
        id=?
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:32:25 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:39:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 104216 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:39:00 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:39:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:39:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:39:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:39:13 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.915 seconds (process running for 16.626)
2025-06-25 23:39:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:39:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:39:44 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 104492 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:39:44 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:39:44 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:39:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:39:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:39:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:39:55 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 12.167 seconds (process running for 14.993)
2025-06-25 23:39:56 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.id=?
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:39:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:41:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 104899 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:41:00 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:41:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:41:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:41:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:41:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:41:11 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 13.73 seconds (process running for 16.659)
2025-06-25 23:41:13 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:41:13 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        users 
    where
        id=?
2025-06-25 23:41:13 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.id=?
2025-06-25 23:41:13 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:41:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:41:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:41:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:41:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:41:14 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:42:49 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 105441 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:42:49 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:42:49 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:42:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:42:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:43:01 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 14.628 seconds (process running for 17.353)
2025-06-25 23:43:03 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:43:03 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:43:03 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:44:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 105832 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:44:00 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:44:00 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:44:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:44:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:44:11 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 12.381 seconds (process running for 15.198)
2025-06-25 23:44:12 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:44:12 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:47:36 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 106884 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:47:36 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:47:36 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:47:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:47:41 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:47:44 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 9.148 seconds (process running for 11.63)
2025-06-25 23:47:45 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.id=?
2025-06-25 23:47:45 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.id=?
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:47:45 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:53:01 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 108384 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:53:01 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:53:01 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:53:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:53:08 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:53:12 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 11.978 seconds (process running for 14.649)
2025-06-25 23:53:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:53:14 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:53:15 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:53:15 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:53:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:55:29 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 109184 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:55:29 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:55:29 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:55:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:55:36 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:55:38 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 10.918 seconds (process running for 13.511)
2025-06-25 23:55:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:55:39 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:55:40 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:55:40 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:55:40 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id 
    from
        users ue1_0 
    where
        ue1_0.email=? 
    fetch
        first ? rows only
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:55:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:59:47 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Starting ORMregisterTest using Java 17.0.15 with PID 110426 (started by payan in /home/payan/Descargas/strange-drug2/users)
2025-06-25 23:59:47 [main] DEBUG c.m.u.r.i.p.r.ORMregisterTest - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-25 23:59:47 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - The following 7 profiles are active: "common", "database", "security", "email", "logging", "rate-limit", "test"
2025-06-25 23:59:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table accepted_terms (
        fecha_hora_aceptacion timestamp(6) not null,
        id bigint generated by default as identity,
        term_id bigint not null,
        user_id bigint not null,
        ip varchar(255) not null,
        user_email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table administrators (
        id bigint not null,
        area varchar(255),
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table customers (
        birth_date date,
        id bigint not null,
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table terms_and_conditions (
        active boolean not null,
        create_term timestamp(6) not null,
        id bigint generated by default as identity,
        content TEXT not null,
        title varchar(255) not null,
        type varchar(255) not null,
        version varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table users (
        verified_code boolean not null,
        verified_term boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        last_name varchar(255) not null,
        name varchar(255) not null,
        password varchar(255) not null,
        phone varchar(255),
        rol varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    create table verification_codes (
        is_verified boolean not null,
        used boolean not null,
        generated_at timestamp(6) not null,
        id bigint generated by default as identity,
        code varchar(255) not null,
        email varchar(255) not null,
        primary key (id)
    )
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists accepted_terms 
       add constraint FKql51dx6acdxk53fqjjly0b66f 
       foreign key (term_id) 
       references terms_and_conditions
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists administrators 
       add constraint FK3w6wcfo04i0l5sfxgcf6iq0yh 
       foreign key (id) 
       references users
2025-06-25 23:59:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists customers 
       add constraint FKpog72rpahj62h7nod9wwc28if 
       foreign key (id) 
       references users
2025-06-25 23:59:57 [main] INFO  c.m.u.r.i.p.r.ORMregisterTest - Started ORMregisterTest in 12.144 seconds (process running for 14.951)
2025-06-25 23:59:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:59:58 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, last_name, name, password, phone, rol, verified_code, verified_term, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-06-25 23:59:58 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:59:58 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:59:59 [main] DEBUG org.hibernate.SQL - 
    select
        ue1_0.id,
        case 
            when ue1_1.id is not null 
                then 1 
            when ue1_2.id is not null 
                then 2 
            when ue1_0.id is not null 
                then 0 
            end,
            ue1_0.email,
            ue1_0.last_name,
            ue1_0.name,
            ue1_0.password,
            ue1_0.phone,
            ue1_0.rol,
            ue1_0.verified_code,
            ue1_0.verified_term,
            ue1_1.area,
            ue1_2.birth_date 
        from
            users ue1_0 
        left join
            administrators ue1_1 
                on ue1_0.id=ue1_1.id 
        left join
            customers ue1_2 
                on ue1_0.id=ue1_2.id 
        where
            ue1_0.email=?
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists accepted_terms cascade 
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists administrators cascade 
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists customers cascade 
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists terms_and_conditions cascade 
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-25 23:59:59 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists verification_codes cascade 
